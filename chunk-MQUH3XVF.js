import{a as d,f as r}from"./chunk-BWTS26BR.js";import"./chunk-ZSJVXY4V.js";import{c as o}from"./chunk-MGTFDIAP.js";import"./chunk-ZBY23LQK.js";import{Ib as t,Jb as i,Kb as n,Zb as e,ob as m}from"./chunk-77A2MDW7.js";import"./chunk-EQDQRRRY.js";var s=(()=>{class l{ngOnInit(){}static \u0275fac=function(a){return new(a||l)};static \u0275cmp=m({type:l,selectors:[["demo-api"]],decls:836,vars:0,consts:[["color","accent"],["href","https://github.com/systemjs/systemjs","target","_blank"],["routerLink","/examples/testing"]],template:function(a,c){a&1&&(t(0,"h1"),e(1,"API"),i(),t(2,"section")(3,"h2"),e(4,"LazyElementDirective"),i(),t(5,"code",0),e(6,"Directive"),i(),n(7,"br"),t(8,"p"),e(9," A structural directive which lazy loads desired Angular element (or any other webcomponent) "),i(),t(10,"mat-card")(11,"table")(12,"thead")(13,"th"),e(14,"Property"),i(),t(15,"th"),e(16,"Description"),i()(),t(17,"tbody")(18,"tr")(19,"td")(20,"pre"),e(21,"selector"),i()(),t(22,"td")(23,"p"),e(24," The selector is "),t(25,"code"),e(26,"axLazyElement"),i(),e(27," which should be used with "),t(28,"code"),e(29,"*"),i(),e(30," as in "),t(31,"code"),e(32,"*axLazyElement"),i(),e(33," because it is a structural directive. "),i()()(),t(34,"tr")(35,"td")(36,"pre"),e(37,`@Input('axLazyElement')
url: string;`),i()(),t(38,"td")(39,"p"),e(40," The url of the element bundle (or module). This is the main property which corresponds to the main directive selector. "),i(),t(41,"ul")(42,"li"),e(43," Inline string value - "),t(44,"code"),e(45,`<some-element *axLazyElement="'https://elements.com/some-element'"></some-element>`),i()(),t(46,"li"),e(47," Component property reference - "),t(48,"code"),e(49,'<some-element *axLazyElement="url"></some-element>'),i()(),t(50,"code",0),e(51,"Pre-configurable"),i()()()(),t(52,"tr")(53,"td")(54,"pre"),e(55,`@Input('axLazyElementLoadingTemplate')
loadingTemplateRef: TemplateRef<any>;`),i()(),t(56,"td")(57,"p"),e(58," Reference to Angular template which will be displayed before the element bundle (or module) was loaded. To show loader we can create following template "),t(59,"code"),e(60,"<ng-template #loading>Loading...</ng-template>"),i(),e(61," and then we have to reference it "),t(62,"code"),e(63,'<some-element *axLazyElement="url; loadingTemplate: loading"></some-element>'),i()(),t(64,"code",0),e(65,"Optional"),i(),e(66,"\xA0"),t(67,"code",0),e(68,"Default: undefined"),i()()(),t(69,"tr")(70,"td")(71,"pre"),e(72,`@Input('axLazyElementErrorTemplate')
errorTemplateRef: TemplateRef<any>;`),i()(),t(73,"td")(74,"p"),e(75," Reference to Angular template which will be displayed when the element bundle (or module) loading failed. To show error message we can create following template "),t(76,"code"),e(77,"<ng-template #error>Loading failed...</ng-template>"),i(),e(78," and then we have to reference it "),t(79,"code"),e(80,'<some-element *axLazyElement="url; errorTemplate: error"></some-element>'),i()(),t(81,"code",0),e(82,"Optional"),i(),e(83,"\xA0"),t(84,"code",0),e(85,"Default: undefined"),i()()(),t(86,"tr")(87,"td")(88,"pre"),e(89,`@Input('axLazyElementModule')
isModule: boolean;`),i()(),t(90,"td")(91,"p"),e(92," Flag that specifies if the element is loaded as bundle (default) or as module. This will influence the generated "),t(93,"code"),e(94,"<script>"),i(),e(95," tag which will get "),t(96,"code"),e(97,'type="module"'),i(),e(98," in case this flag was set to true. The flag can be set using "),t(99,"code"),e(100,'<some-element *axLazyElement="url; module: true"></some-element>'),i()(),t(101,"code",0),e(102,"Optional"),i(),e(103,"\xA0"),t(104,"code",0),e(105,"Default: false"),i(),t(106,"code",0),e(107,"Pre-configurable"),i()()(),t(108,"tr")(109,"td")(110,"pre"),e(111,`@Input('axLazyElementImportMap')
importMap: boolean;`),i()(),t(112,"td")(113,"p"),e(114," Flag that specifies if the element url should be resolved using import maps. If set to true an instance of "),t(115,"a",1),e(116,"SystemJS"),i(),e(117," needs to exist in the application. "),t(118,"code"),e(119,"System.resolve"),i(),e(120," is used in order to find the correct URL to load the bundle file containing the element definition. The flag can be set using "),t(121,"code"),e(122,'<some-element *axLazyElement="url; importMap: true"></some-element>'),i()(),t(123,"code",0),e(124,"Optional"),i(),e(125,"\xA0"),t(126,"code",0),e(127,"Default: false"),i(),t(128,"code",0),e(129,"Pre-configurable"),i()()()()()(),t(130,"mat-card")(131,"table")(132,"thead")(133,"th"),e(134,"Function"),i(),t(135,"th"),e(136,"Description"),i()(),t(137,"tbody")(138,"tr")(139,"td")(140,"pre"),e(141,"destroyEmbeddedView()"),i()(),t(142,"td")(143,"p"),e(144," The "),t(145,"code"),e(146,"destroyEmbeddedView"),i(),e(147," is a public method which can be called by parent component to destroy element's embedded view on demand. "),i()()()()()()(),t(148,"section")(149,"h2"),e(150,"LazyElementModule"),i(),t(151,"code",0),e(152,"Module"),i(),n(153,"br"),t(154,"p"),e(155," An Angular module which exports "),t(156,"code"),e(157,"*axLazyElement"),i(),e(158," and "),t(159,"code"),e(160,"*axLazyElementDynamic"),i(),e(161," directives so it has to be imported in other Angular modules which want to use these directives in the templates of their components. Module can be also pre-configured using "),t(162,"code"),e(163,"forRoot()"),i(),e(164," and "),t(165,"code"),e(166,"forFeature()"),i(),e(167," static methods. "),i(),t(168,"mat-card")(169,"table")(170,"thead")(171,"th"),e(172,"Function"),i(),t(173,"th"),e(174,"Description"),i()(),t(175,"tbody")(176,"tr")(177,"td")(178,"pre"),e(179,"forRoot(options: LazyElementModuleRootOptions)"),i()(),t(180,"td")(181,"p"),e(182," The "),t(183,"code"),e(184,"forRoot()"),i(),e(185," static method which accepts options of "),t(186,"code"),e(187,"LazyElementModuleRootOptions"),i(),e(188," type "),n(189,"br"),t(190,"code",0),e(191,"Optional"),i()()()(),t(192,"tr")(193,"td")(194,"pre"),e(195,"forFeature(options: LazyElementModuleOptions)"),i()(),t(196,"td")(197,"p"),e(198," The "),t(199,"code"),e(200,"forFeature()"),i(),e(201," static method which accepts options of "),t(202,"code"),e(203,"LazyElementModuleOptions"),i(),e(204," type "),n(205,"br"),t(206,"code",0),e(207,"Optional"),i()()()()()()()(),t(208,"section")(209,"h2"),e(210,"LazyElementModuleRootOptions"),i(),t(211,"code",0),e(212,"Interface"),i(),n(213,"br"),t(214,"p"),e(215," Type of an option object that can be passed to static "),t(216,"code"),e(217,"forRoot()"),i(),e(218," method of "),t(219,"code"),e(220,"LazyElementModule"),i(),e(221,". "),i(),t(222,"mat-card")(223,"table")(224,"thead")(225,"th"),e(226,"Property"),i(),t(227,"th"),e(228,"Description"),i()(),t(229,"tbody")(230,"tr")(231,"td")(232,"pre"),e(233,"elementConfigs: ElementConfig[]"),i()(),t(234,"td")(235,"p"),e(236," Optional array of "),t(237,"code"),e(238,"ElementConfig"),i(),e(239,"... "),n(240,"br"),t(241,"code",0),e(242,"Optional"),i(),e(243,"\xA0"),t(244,"code",0),e(245,"Default: []"),i()()()(),t(246,"tr")(247,"td")(248,"pre"),e(249,"rootOptions: LazyElementRootOptions"),i()(),t(250,"td")(251,"p"),e(252," Optional object of "),t(253,"code"),e(254,"LazyElementRootOptions"),i(),e(255,"... "),n(256,"br"),t(257,"code",0),e(258,"Optional"),i(),e(259,"\xA0"),t(260,"code",0),e(261,"Default: { }"),i()()()()()()()(),t(262,"section")(263,"h2"),e(264,"LazyElementRootOptions"),i(),t(265,"code",0),e(266,"Interface"),i(),n(267,"br"),t(268,"p"),e(269," Type of an option object that can be passed as the "),t(270,"code"),e(271,"rootOptions"),i(),e(272," of the "),t(273,"code"),e(274,"LazyElementModuleRootOptions"),i(),e(275," into the "),t(276,"code"),e(277,"forRoot()"),i(),e(278," method of "),t(279,"code"),e(280,"LazyElementModule"),i(),e(281,". These options will be applied to every element loaded using "),t(282,"code"),e(283,"*axLazyElement"),i(),e(284," or "),t(285,"code"),e(286,"*axLazyElementDynamic"),i(),e(287," directives. These options can be overridden by the element configuration in "),t(288,"code"),e(289,"forFeature()"),i(),e(290," and lastly by the inline configuration of "),t(291,"code"),e(292,"*axLazyElement"),i(),e(293," directive. "),i(),t(294,"mat-card")(295,"table")(296,"thead")(297,"th"),e(298,"Property"),i(),t(299,"th"),e(300,"Description"),i()(),t(301,"tbody")(302,"tr")(303,"td")(304,"pre"),e(305,"loadingComponent: Type<any>"),i()(),t(306,"td")(307,"p"),e(308," Component class to be displayed during element loading (similar to "),t(309,"code"),e(310,"loadingTemplate"),i(),e(311," that can be specified inline in the template, eg "),t(312,"code"),e(313,'*axLazyElement="url; loadingTemplate: loading;"'),i(),e(314,") "),i(),t(315,"code",0),e(316,"Optional"),i(),e(317,"\xA0"),t(318,"code",0),e(319,"Default: undefined"),i()()(),t(320,"tr")(321,"td")(322,"pre"),e(323,"errorComponent: Type<any>"),i()(),t(324,"td")(325,"p"),e(326," Component class to be displayed after element loading failed (similar to "),t(327,"code"),e(328,"errorTemplate"),i(),e(329," that can be specified inline in the template, eg "),t(330,"code"),e(331,'*axLazyElement="url; errorTemplate: error;"'),i(),e(332,") "),i(),t(333,"code",0),e(334,"Optional"),i(),e(335,"\xA0"),t(336,"code",0),e(337,"Default: undefined"),i()()(),t(338,"tr")(339,"td")(340,"pre"),e(341,"isModule: boolean"),i()(),t(342,"td")(343,"p"),e(344," Flag that specifies if the element is loaded as bundle (default) or as module. This will influence the generated "),t(345,"code"),e(346,"<script>"),i(),e(347," tag which will get "),t(348,"code"),e(349,'type="module"'),i(),e(350," in case this flag was set to true. "),i(),t(351,"code",0),e(352,"Optional"),i(),e(353,"\xA0"),t(354,"code",0),e(355,"Default: undefined"),i()()(),t(356,"tr")(357,"td")(358,"pre"),e(359,"importMap: boolean"),i()(),t(360,"td")(361,"p"),e(362," Flag that specifies if the element url should be resolved using import maps. If set to true an instance of "),t(363,"a",1),e(364,"SystemJS"),i(),e(365," needs to exist in the application. "),t(366,"code"),e(367,"System.resolve"),i(),e(368," is used in order to find the correct URL to load the bundle file containing the element definition. "),i(),t(369,"code",0),e(370,"Optional"),i(),e(371,"\xA0"),t(372,"code",0),e(373,"Default: undefined"),i()()(),t(374,"tr")(375,"td")(376,"pre"),e(377,"preload: boolean"),i()(),t(378,"td")(379,"p"),e(380," Flag that specifies if the all the modules should be preloaded "),i(),t(381,"code",0),e(382,"Optional"),i(),e(383,"\xA0"),t(384,"code",0),e(385,"Default: undefined"),i()()(),t(386,"tr")(387,"td")(388,"pre"),e(389,"hooksConfig: HooksConfig"),i()(),t(390,"td")(391,"p"),e(392," Global hooks configuration for all elements. Any loaded element will run hooks configured here unless some of them were overriden in "),t(393,"code"),e(394,"ElementConfig"),i(),e(395,". "),i(),t(396,"code",0),e(397,"Optional"),i(),e(398,"\xA0"),t(399,"code",0),e(400,"Default: undefined"),i()()()()()()(),t(401,"section")(402,"h2"),e(403,"LazyElementModuleOptions"),i(),t(404,"code",0),e(405,"Interface"),i(),n(406,"br"),t(407,"p"),e(408," Type of an option object that can be passed to static "),t(409,"code"),e(410,"forFeature()"),i(),e(411," method of "),t(412,"code"),e(413,"LazyElementModule"),i(),e(414,". "),i(),t(415,"mat-card")(416,"table")(417,"thead")(418,"th"),e(419,"Property"),i(),t(420,"th"),e(421,"Description"),i()(),t(422,"tbody")(423,"tr")(424,"td")(425,"pre"),e(426,"elementConfigs: ElementConfig[]"),i()(),t(427,"td")(428,"p"),e(429," Optional array of "),t(430,"code"),e(431,"ElementConfig"),i(),e(432,"... "),n(433,"br"),t(434,"code",0),e(435,"Optional"),i(),e(436,"\xA0"),t(437,"code",0),e(438,"Default: []"),i()()()()()()()(),t(439,"section")(440,"h2"),e(441,"ElementConfig"),i(),t(442,"code",0),e(443,"Interface"),i(),n(444,"br"),t(445,"p"),e(446," The element config used to pre-configure "),t(447,"code"),e(448,"LazyElementModule"),i(),e(449," so that we do not have to specify url (and other supported options) inline inside of the "),t(450,"code"),e(451,"*axLazyElement"),i(),e(452," and "),t(453,"code"),e(454,"*axLazyElementDynamic"),i(),e(455," directives. The configs are matched to particular elements by the tag. The elements are still loaded lazily even though they are preconfigured in the module during application startup... "),i(),t(456,"mat-card")(457,"table")(458,"thead")(459,"th"),e(460,"Property"),i(),t(461,"th"),e(462,"Description"),i()(),t(463,"tbody")(464,"tr")(465,"td")(466,"pre"),e(467,"tag: string"),i()(),t(468,"td")(469,"p"),e(470,"Tag of an element (eg: "),t(471,"code"),e(472,"some-element"),i(),e(473,")"),i()()(),t(474,"tr")(475,"td")(476,"pre"),e(477,"url: string"),i()(),t(478,"td")(479,"p"),e(480," The url of an element bundle or ES module (eg: "),t(481,"code"),e(482,"https://my-org.com/elements/some-element.js"),i(),e(483,") "),i()()(),t(484,"tr")(485,"td")(486,"pre"),e(487,"isModule: boolean"),i()(),t(488,"td")(489,"p"),e(490," Flag that specifies if the element is loaded as bundle (default) or as module. This will influence the generated "),t(491,"code"),e(492,"<script>"),i(),e(493," tag which will get "),t(494,"code"),e(495,'type="module"'),i(),e(496," in case this flag was set to true. "),i(),t(497,"code",0),e(498,"Optional"),i(),e(499,"\xA0"),t(500,"code",0),e(501,"Default: undefined"),i()()(),t(502,"tr")(503,"td")(504,"pre"),e(505,"importMap: boolean"),i()(),t(506,"td")(507,"p"),e(508," Flag that specifies if the element url should be resolved using import maps. If set to true an instance of "),t(509,"a",1),e(510,"SystemJS"),i(),e(511," needs to exist in the application. "),t(512,"code"),e(513,"System.resolve"),i(),e(514," is used in order to find the correct URL to load the bundle file containing the element definition. "),i(),t(515,"code",0),e(516,"Optional"),i(),e(517,"\xA0"),t(518,"code",0),e(519,"Default: undefined"),i()()(),t(520,"tr")(521,"td")(522,"pre"),e(523,"loadingComponent: Type<any>"),i()(),t(524,"td")(525,"p"),e(526," Component class to be displayed during element loading (similar to "),t(527,"code"),e(528,"loadingTemplate"),i(),e(529," that can be specified inline in the template, eg "),t(530,"code"),e(531,'*axLazyElement="url; loadingTemplate: loading;"'),i(),e(532,") "),i(),t(533,"code",0),e(534,"Optional"),i(),e(535,"\xA0"),t(536,"code",0),e(537,"Default: undefined"),i()()(),t(538,"tr")(539,"td")(540,"pre"),e(541,"errorComponent: Type<any>"),i()(),t(542,"td")(543,"p"),e(544," Component class to be displayed after element loading failed (similar to "),t(545,"code"),e(546,"errorTemplate"),i(),e(547," that can be specified inline in the template, eg "),t(548,"code"),e(549,'*axLazyElement="url; errorTemplate: error;"'),i(),e(550,") "),i(),t(551,"code",0),e(552,"Optional"),i(),e(553,"\xA0"),t(554,"code",0),e(555,"Default: undefined"),i()()(),t(556,"tr")(557,"td")(558,"pre"),e(559,"preload: boolean"),i()(),t(560,"td")(561,"p"),e(562,"Flag that specifies if the element is preloaded."),i(),t(563,"code",0),e(564,"Optional"),i(),e(565,"\xA0"),t(566,"code",0),e(567,"Default: undefined"),i()()(),t(568,"tr")(569,"td")(570,"pre"),e(571,"hooks: HooksConfig"),i()(),t(572,"td")(573,"p"),e(574," Hooks configuration for the element. Any hook specified here will overwrite corresponding root hook for the element. See "),t(575,"code"),e(576,"HooksConfig"),i(),e(577,". "),i(),t(578,"code",0),e(579,"Optional"),i(),e(580,"\xA0"),t(581,"code",0),e(582,"Default: undefined"),i()()()()()()(),t(583,"section")(584,"h2"),e(585,"HooksConfig"),i(),t(586,"code",0),e(587,"Interface"),i(),n(588,"br"),t(589,"p"),e(590," Hooks for running custom logic as part of the element's lifecycle. See "),t(591,"code"),e(592,"ElementConfig"),i(),e(593," and "),t(594,"code"),e(595,"LazyElementRootOptions"),i(),e(596,". "),i(),t(597,"mat-card")(598,"table")(599,"thead")(600,"th"),e(601,"Property"),i(),t(602,"th"),e(603,"Description"),i()(),t(604,"tbody")(605,"tr")(606,"td")(607,"pre"),e(608,"beforeLoad: Hook"),i()(),t(609,"td")(610,"p"),e(611," This hook will run before the browser starts the element's download. If the provided hook returns a "),t(612,"code"),e(613,"Promise"),i(),e(614," the element's download will be postponed until the Promise is resolved. "),i(),t(615,"code",0),e(616,"Optional"),i(),e(617,"\xA0"),t(618,"code",0),e(619,"Default: undefined"),i()()(),t(620,"tr")(621,"td")(622,"pre"),e(623,"afterLoad: Hook"),i()(),t(624,"td")(625,"p"),e(626," This hook will run after the element's download has been completed. If the provided hook returns a "),t(627,"code"),e(628,"Promise"),i(),e(629," the element's insertion into the corresponding Angular's view will be postponed until the Promise is resolved. "),i(),t(630,"code",0),e(631,"Optional"),i(),e(632,"\xA0"),t(633,"code",0),e(634,"Default: undefined"),i()()()()()()(),t(635,"section")(636,"h2"),e(637,"Hook"),i(),t(638,"code",0),e(639,"Type"),i(),n(640,"br"),t(641,"p"),e(642,"Hook that can be run as part of "),t(643,"code"),e(644,"HooksConfig"),i(),e(645,"."),i(),t(646,"mat-card")(647,"table")(648,"thead")(649,"th"),e(650,"Value"),i(),t(651,"th"),e(652,"Description"),i()(),t(653,"tbody")(654,"tr")(655,"td")(656,"pre"),e(657,"(tag: string) => Promise<void> \u2758 <void>"),i()(),t(658,"td")(659,"p"),e(660," Provided function will be called at the appropriate time in the element's lifecycle. If the function returns a "),t(661,"code"),e(662,"Promise"),i(),e(663," the library will wait for its' resolution before proceeding. "),i()()()()()()(),t(664,"section")(665,"h2"),e(666,"LazyElementsLoaderService"),i(),t(667,"code",0),e(668,"Service"),i(),n(669,"br"),t(670,"p"),e(671," A service used for loading the Angular element (or any other webcomponent) "),i(),t(672,"mat-card")(673,"table")(674,"thead")(675,"th"),e(676,"Method"),i(),t(677,"th"),e(678,"Description"),i()(),t(679,"tbody")(680,"tr")(681,"td")(682,"pre"),e(683,"preload(tags? : string[]): void"),i()(),t(684,"td")(685,"p"),e(686," Preloads the specified tags which are preconfigured using "),t(687,"code"),e(688,"forRoot"),i(),e(689," and "),t(690,"code"),e(691,"forFeature"),i(),e(692,". If "),t(693,"code"),e(694,"tags"),i(),e(695," is "),t(696,"code"),e(697,"undefined|null"),i(),e(698," preload all the configured tags. "),n(699,"br"),e(700," Parameters: "),n(701,"br"),e(702," tags "),t(703,"code",0),e(704,"Optional"),i(),e(705,"\xA0"),t(706,"code",0),e(707,"Default: undefined"),i(),n(708,"br"),e(709," returns: "),t(710,"code",0),e(711,"void"),i()()()()()()()(),t(712,"section")(713,"h2"),e(714,"LAZY_ELEMENTS_REGISTRY"),i(),t(715,"code",0),e(716,"Token"),i(),n(717,"br"),t(718,"p"),e(719," A token used to override default lazy elements registry which is used to prevent multiple downloads of the same element Javascript bundle... "),i(),t(720,"mat-card")(721,"table")(722,"thead")(723,"th"),e(724,"Value"),i(),t(725,"th"),e(726,"Description"),i()(),t(727,"tbody")(728,"tr")(729,"td")(730,"pre"),e(731,`{
  provide: LAZY_ELEMENTS_REGISTRY,
  useClass: YourRegistryImplementation
}`),i()(),t(732,"td")(733,"p"),e(734," Overrides default lazy elements registry implementation which can be useful when using library in the multiple apps (or elements) on a single page to prevent multiple downloads of the same element Javascript bundle. The new implementation has to implement "),t(735,"code"),e(736,"LazyElementsRegistry"),i()()()()()()()(),t(737,"section")(738,"h2"),e(739,"LazyElementsRegistry"),i(),t(740,"code",0),e(741,"Interface"),i(),n(742,"br"),t(743,"p"),e(744," An interface which has to be implemented by custom lazy elements registry. The default lazy element registry used by the library out of the box is "),t(745,"code"),e(746,"Map<string, Promise<void>"),i()(),t(747,"mat-card")(748,"table")(749,"thead")(750,"th"),e(751,"Property"),i(),t(752,"th"),e(753,"Description"),i()(),t(754,"tbody")(755,"tr")(756,"td")(757,"pre"),e(758,"get: (url: string) => Promise<void>"),i()(),t(759,"td")(760,"p"),e(761," Retrieve loading state ("),t(762,"code"),e(763,"Promise"),i(),e(764,") of an element bundle identified by the "),t(765,"code"),e(766,"url"),i()()()(),t(767,"tr")(768,"td")(769,"pre"),e(770,"set: (url: string, notifier: Promise<void>) => void"),i()(),t(771,"td")(772,"p"),e(773," Store loading state ("),t(774,"code"),e(775,"Promise"),i(),e(776,") of an element bundle identified by the "),t(777,"code"),e(778,"url"),i()()()(),t(779,"tr")(780,"td")(781,"pre"),e(782,"has: (url: string) => boolean"),i()(),t(783,"td")(784,"p"),e(785," Check if registry already contains loading state ("),t(786,"code"),e(787,"Promise"),i(),e(788,") of an element bundle identified by the "),t(789,"code"),e(790,"url"),i()()()()()()()(),t(791,"section")(792,"h2"),e(793,"LazyElementTestingModule"),i(),t(794,"code",0),e(795,"Module"),i(),t(796,"code"),e(797,"@angular-extensions/elements/testing"),i(),n(798,"br"),t(799,"p"),e(800," The testing module is used in Angular unit-tests to help mock lazy-loaded elements with mock components provided by the test. Check out how to use it in the "),t(801,"a",2),e(802,"testing example"),i(),e(803,". "),i(),t(804,"mat-card")(805,"table")(806,"thead")(807,"th"),e(808,"Declarable"),i(),t(809,"th"),e(810,"Description"),i()(),t(811,"tbody")(812,"tr")(813,"td")(814,"pre"),e(815,"LazyElementTestingDirective "),t(816,"code"),e(817,"*axLazyElement"),i()()(),t(818,"td")(819,"p"),e(820," Overrides default behavior of "),t(821,"code"),e(822,"*axLazyElement"),i(),e(823," by displaying element immediately without trying to lazy load it, display loading or error... "),i()()(),t(824,"tr")(825,"td")(826,"pre"),e(827,"LazyElementDynamicTestingDirective "),t(828,"code"),e(829,"*axLazyElementDynamic"),i()()(),t(830,"td")(831,"p"),e(832," Overrides default behavior of "),t(833,"code"),e(834,"*axLazyElementDynamic"),i(),e(835," by displaying element immediately without trying to lazy load it, display loading or error... "),i()()()()()()())},dependencies:[o,r,d],styles:["h2[_ngcontent-%COMP%]{display:inline-block;font-weight:700;margin:0 10px 10px 0}mat-card[_ngcontent-%COMP%]{padding:0;margin-bottom:80px;overflow-x:auto}table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse}table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%], table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{text-align:left;padding:15px 20px}table[_ngcontent-%COMP%]   pre[_ngcontent-%COMP%]{opacity:.8}"]})}return l})();var g=[{path:"",component:s}];export{g as default};
